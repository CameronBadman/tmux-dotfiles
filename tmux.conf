# Plugin Management
# =============================================================================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'arl/gitmux'
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Basic Settings
# =============================================================================
set -g mouse on
set -g base-index 1
set-window-option -g pane-base-index 1
set -g history-limit 10000

# Prefix Configuration
# =============================================================================
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Define Cyberpunk Colors
# =============================================================================
color_neon_pink="#FF00FF"
color_neon_blue="#00FFFF"
color_neon_green="#00FF9F"
color_neon_purple="#9D00FF"
color_neon_orange="#FF9300"
color_neon_yellow="#FFFF00"
color_bg="#1a1b26"

# Nerd Font Icons Configuration
# =============================================================================
# Development tools and languages
set -g @nerd-font-window-name-ruby-icon "󰴭"
set -g @nerd-font-window-name-go-icon "󰟓"
set -g @nerd-font-window-name-rust-icon "󱘗"
set -g @nerd-font-window-name-node-icon ""
set -g @nerd-font-window-name-npm-icon ""
set -g @nerd-font-window-name-yarn-icon ""
set -g @nerd-font-window-name-python-icon ""
set -g @nerd-font-window-name-make-icon ""

# Editors and IDEs
set -g @nerd-font-window-name-nvim-icon ""
set -g @nerd-font-window-name-vim-icon ""
set -g @nerd-font-window-name-nano-icon "󰱆"

# Version Control
set -g @nerd-font-window-name-lazygit-icon "󰊢"
set -g @nerd-font-window-name-git-icon ""

# Container and System Tools
set -g @nerd-font-window-name-docker-icon "󰡨"
set -g @nerd-font-window-name-lazydocker-icon "󰡨"
set -g @nerd-font-window-name-htop-icon "󰨇"
set -g @nerd-font-window-name-btop-icon "󰨇"
set -g @nerd-font-window-name-top-icon "󰨇"

# File Operations and Search
set -g @nerd-font-window-name-man-icon "󰋗"
set -g @nerd-font-window-name-less-icon "󰋗"
set -g @nerd-font-window-name-more-icon "󰋗"
set -g @nerd-font-window-name-fzf-icon "󰈭"

# Shells and Remote Sessions
set -g @nerd-font-window-name-ssh-icon "󰣀"
set -g @nerd-font-window-name-bash-icon ""
set -g @nerd-font-window-name-zsh-icon ""
set -g @nerd-font-window-name-shell-icon ""

# Window Naming Configuration
# =============================================================================
set-option -g automatic-rename on
set-option -g allow-rename on
set-option -g status-interval 1
set-option -g automatic-rename-format '#{?#{==:#{pane_current_command},nvim},#{b:pane_current_path},#{?#{==:#{pane_current_command},vim},#{b:pane_current_path},#{pane_current_command}}}'

# Window Status Format (Compact Design)
# =============================================================================
set -g window-status-format "\
#{?#{m:0,#{e|%:#{window_index},6}},#[fg=$color_neon_pink],\
#{?#{m:1,#{e|%:#{window_index},6}},#[fg=$color_neon_blue],\
#{?#{m:2,#{e|%:#{window_index},6}},#[fg=$color_neon_green],\
#{?#{m:3,#{e|%:#{window_index},6}},#[fg=$color_neon_purple],\
#{?#{m:4,#{e|%:#{window_index},6}},#[fg=$color_neon_orange],\
#[fg=$color_neon_yellow]}}}}}#[bg=$color_bg]█\
#{?#{m:0,#{e|%:#{window_index},6}},#[bg=$color_neon_pink],\
#{?#{m:1,#{e|%:#{window_index},6}},#[bg=$color_neon_blue],\
#{?#{m:2,#{e|%:#{window_index},6}},#[bg=$color_neon_green],\
#{?#{m:3,#{e|%:#{window_index},6}},#[bg=$color_neon_purple],\
#{?#{m:4,#{e|%:#{window_index},6}},#[bg=$color_neon_orange],\
#[bg=$color_neon_yellow]}}}}}#[fg=#000000] #I:#{window_name} \
#{?#{m:0,#{e|%:#{window_index},6}},#[fg=$color_neon_pink],\
#{?#{m:1,#{e|%:#{window_index},6}},#[fg=$color_neon_blue],\
#{?#{m:2,#{e|%:#{window_index},6}},#[fg=$color_neon_green],\
#{?#{m:3,#{e|%:#{window_index},6}},#[fg=$color_neon_purple],\
#{?#{m:4,#{e|%:#{window_index},6}},#[fg=$color_neon_orange],\
#[fg=$color_neon_yellow]}}}}}#[bg=$color_bg]█"

# Active Window Format
set -g window-status-current-format "#[fg=#ffffff,bg=$color_bg]█\
#[fg=#000000,bg=#ffffff] #I:#{window_name} \
#[fg=#ffffff,bg=$color_bg]█"

# Status Bar Configuration
# =============================================================================
set -g status on
set -g status-position top
set -g status-justify left
set -g status-style "bg=$color_bg"
set -g window-status-separator " "

# Status Bar Content
set -g status-left "#[fg=$color_bg,bg=$color_neon_pink]#[fg=#000000,bg=$color_neon_pink,bold] 󱘖 #S #[fg=$color_neon_pink,bg=$color_bg]█#{?client_prefix,󰘧,} "
set -g status-right "#[fg=$color_neon_green,bg=$color_bg,bold] #{pane_current_path} #[fg=#ffffff,bg=$color_bg,bold]#(cd #{pane_current_path}; gitmux -cfg ~/.config/gitmux/gitmux.conf)"
set -g status-right-length 200
set -g status-left-length 100

# Color Settings
# =============================================================================
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Apply Colors to Various Elements
set -g pane-border-style "fg=$color_neon_green"
set -g pane-active-border-style "fg=$color_neon_pink"
set -g message-style "bg=$color_neon_pink,fg=#000000"
set -g message-command-style "bg=$color_neon_green,fg=#000000"

# Key Bindings
# =============================================================================
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "󰐃 Config reloaded!"
unbind R
bind-key R command-prompt -I "" "rename-window '%%'"

# Directory-Aware Window and Pane Management
# =============================================================================
# Window Creation
# Regular new window
bind c new-window
# Directory-aware new window (Alt version)
bind M-c new-window -c "#{pane_current_path}"

# Vertical Split
# Regular vertical split
bind % split-window -h
# Directory-aware vertical split (Alt version)
bind M-% split-window -h -c "#{pane_current_path}"

# Horizontal Split
# Regular horizontal split
bind '"' split-window -v
# Directory-aware horizontal split (Alt version)
bind M-'"' split-window -v -c "#{pane_current_path}"

# Additional Convenient Split Bindings (Optional)
# Regular splits using | and -
bind | split-window -h
bind - split-window -v
# Directory-aware splits using Alt + | and Alt + -
bind M-| split-window -h -c "#{pane_current_path}"
bind M-- split-window -v -c "#{pane_current_path}"


# Session Management
# =============================================================================
# Core Session Controls
# These bindings provide quick access to essential session operations
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"  # Create or attach to session
bind X confirm-before kill-session                                # Kill current session
bind D detach-client                                             # Detach from session
bind C-s choose-session                                          # Interactive session list

# Quick Session Switching
# Allows rapid movement between recent sessions
bind -n M-[ switch-client -p                                     # Previous session
bind -n M-] switch-client -n                                     # Next session

# Session Tree View
# Shows sessions in a tree format with preview
bind C-t choose-tree -Zs                                         # Tree view of sessions

# Session Grouping
# Manages grouped sessions for different projects
bind G command-prompt -p "Group Name:" "new-session -t '%1'"     # Create session group

# Initialize Plugin Manager (must be last)
# =============================================================================
run '~/.tmux/plugins/tpm/tpm'

# VI mode
set-window-option -g mode-keys vi

# Copy mode bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'wl-copy'

# Mouse copy behavior
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'wl-copy'
